{"ast":null,"code":"import { HttpClientModule } from \"@angular/common/http\";\nimport { CommonModule } from \"@angular/common\";\nimport { CartComponent } from '../cart/cart.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../product.service\";\nimport * as i2 from \"../cart.service\";\nimport * as i3 from \"../cart-quantity.service\";\nimport * as i4 from \"@angular/common\";\nfunction ProductListComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.trackQuantity, \" \");\n  }\n}\nfunction ProductListComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"p\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6);\n    i0.ɵɵelement(5, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 8)(7, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ProductListComponent_li_2_Template_button_click_7_listener() {\n      const product_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.addProduct(product_r3));\n    });\n    i0.ɵɵtext(8, \"Add Product\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ProductListComponent_li_2_Template_button_click_9_listener() {\n      const product_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.removeProduct(product_r3));\n    });\n    i0.ɵɵtext(10, \"Less\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" ID: \", product_r3.id ? product_r3.id : \"N/A\", \" - \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" Nome: \", product_r3.name ? product_r3.name : \"N/A\", \" - Categoria: \", product_r3.category ? product_r3.category : \"N/A\", \" - Prezzo: \", product_r3.price ? product_r3.price : \"N/A\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", product_r3.name);\n    i0.ɵɵproperty(\"src\", product_r3.img ? \"../../assets/images/\" + product_r3.img : \"../../assets/images/default.jpg\", i0.ɵɵsanitizeUrl);\n  }\n}\nexport let ProductListComponent = /*#__PURE__*/(() => {\n  class ProductListComponent {\n    constructor(productService, cartService, cartQuantityService) {\n      this.productService = productService;\n      this.cartService = cartService;\n      this.cartQuantityService = cartQuantityService;\n      this.trackQuantity = 0;\n      this.isCartVisible = false;\n      this.showCartIcon = false;\n    }\n    ngOnInit() {\n      this.products$ = this.productService.getProducts();\n      this.updateCart();\n    }\n    addProduct(product) {\n      this.cartService.getUserCart().subscribe(cart => {\n        if (this.exclusiveInCart(cart) && product.category === \"EXCLUSIVE\") {\n          console.log(\"Exclusive già nel carrello\");\n          return;\n        }\n        this.cartService.addProductToCart(product, 1).subscribe(() => {\n          console.log('Prodotto aggiunto con successo al carrello.');\n          console.log(product);\n          this.cartService.cartVisibility$.subscribe(isVisible => {\n            this.showCartIcon = isVisible;\n            this.isCartVisible = isVisible;\n          });\n          this.updateCart();\n        }, error => console.error('Errore durante l\\'aggiunta del prodotto al carrello:', error));\n      }, error => {\n        if (error.status === 404) {\n          this.cartService.addProductToCart(product, 1).subscribe(() => {\n            console.log('Prodotto aggiunto con successo al carrello.');\n            this.updateCart();\n          }, error => console.error('Errore durante l\\'aggiunta del prodotto al carrello:', error));\n        } else {\n          console.error('Errore durante il recupero del carrello:', error);\n        }\n      });\n    }\n    removeProduct(product) {\n      this.cartService.removeProductFromCart(product.id, -1).subscribe(() => {\n        console.log('Prodotto rimosso con successo dal carrello.');\n        this.updateCart();\n      }, error => console.error('Errore durante la rimozione del prodotto dal carrello:', error));\n    }\n    updateCart() {\n      this.cartQuantityService.trackQuantity$.subscribe(quantity => {\n        this.trackQuantity = quantity;\n      });\n      this.cartService.getUserCart().subscribe(cart => {\n        const totalQuantity = this.cartService.calculateTotalQuantity(cart.cartProducts);\n        this.trackQuantity = totalQuantity;\n        console.log('Quantità totale aggiornata:', totalQuantity);\n        if (totalQuantity === 0) {\n          this.cartService.updateCartVisibility(false);\n        } else {\n          this.cartService.updateCartVisibility(true);\n        }\n      }, error => console.error('Errore durante l\\'aggiornamento del carrello:', error));\n    }\n    exclusiveInCart(cart) {\n      const exclusiveProduct = cart.cartProducts.filter(product => product.category === \"EXCLUSIVE\");\n      return exclusiveProduct.length > 0 && exclusiveProduct[0].quantity === 1;\n    }\n    static {\n      this.ɵfac = function ProductListComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.CartQuantityService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ProductListComponent,\n        selectors: [[\"app-product-list\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 5,\n        vars: 4,\n        consts: [[1, \"wrapAll\"], [\"class\", \"trackQuantity\", 4, \"ngIf\"], [\"class\", \"liItem\", 4, \"ngFor\", \"ngForOf\"], [1, \"trackQuantity\"], [1, \"liItem\"], [1, \"item\"], [1, \"cardContainer\"], [1, \"cardImg\", 3, \"src\", \"alt\"], [1, \"buttons\"], [1, \"addBtn\", 3, \"click\"], [1, \"lessBtn\", 3, \"click\"]],\n        template: function ProductListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ul\", 0);\n            i0.ɵɵtemplate(1, ProductListComponent_p_1_Template, 2, 1, \"p\", 1)(2, ProductListComponent_li_2_Template, 11, 6, \"li\", 2);\n            i0.ɵɵpipe(3, \"async\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(4, \"app-cart\");\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.trackQuantity > 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 2, ctx.products$));\n          }\n        },\n        dependencies: [CommonModule, i4.NgForOf, i4.NgIf, i4.AsyncPipe, HttpClientModule, CartComponent],\n        styles: [\".trackQuantity[_ngcontent-%COMP%]{color:#fff;position:fixed;top:-15px;font-size:20px;right:35px;z-index:999}.wrapAll[_ngcontent-%COMP%]{text-align:center;margin-top:50px}.cardContainer[_ngcontent-%COMP%]{width:100%;height:auto;display:grid;justify-content:center;align-items:center}.cardImg[_ngcontent-%COMP%]{object-fit:cover;width:400px;object-position:18% 38%;height:382px;border:solid 2px green}.liItem[_ngcontent-%COMP%]:first-child{margin-top:30px}.liItem[_ngcontent-%COMP%]{margin-bottom:30px}.buttons[_ngcontent-%COMP%]{margin-top:20px}.lessBtn[_ngcontent-%COMP%]{margin-left:50px}.itemName[_ngcontent-%COMP%]{margin-bottom:30px}@media screen and (max-width: 500px){.wrapAll[_ngcontent-%COMP%]{text-align:left;margin-left:20px}.cardContainer[_ngcontent-%COMP%]{justify-content:start}.cardImg[_ngcontent-%COMP%]{width:77vw;height:75vw}}\"]\n      });\n    }\n  }\n  return ProductListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}