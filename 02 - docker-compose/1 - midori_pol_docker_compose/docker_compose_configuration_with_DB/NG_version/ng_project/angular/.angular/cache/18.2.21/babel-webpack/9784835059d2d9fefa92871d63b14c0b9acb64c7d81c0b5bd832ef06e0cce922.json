{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { v4 as uuidv4 } from 'uuid';\nimport { environment } from '../enviroments/enviroment'; // importa qui\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor(http) {\n      this.http = http;\n      this.cartVisibilitySubject = new BehaviorSubject(false);\n      this.cartVisibility$ = this.cartVisibilitySubject.asObservable();\n      this.apiUrl = environment.apiUrl;\n    }\n    addProductToCart(product, quantity) {\n      const userId = this.getUserId();\n      const data = {\n        ...product,\n        quantity,\n        userId\n      };\n      console.log('Chiamo addProductToCart con:', data); // <-- log qui\n      this.updateCartVisibility(true); // Aggiunto per aggiornare la visibilità dell'icona del carrello\n      return this.http.post(`${this.apiUrl}/add`, data, {\n        responseType: 'text'\n      });\n    }\n    removeProductFromCart(productId, quantity) {\n      const userId = this.getUserId();\n      const data = {\n        id: productId,\n        quantity,\n        userId\n      };\n      return this.http.post(`${this.apiUrl}/less`, data, {\n        responseType: 'text'\n      });\n    }\n    deleteCart(cart) {\n      const userId = this.getUserId();\n      const data = {\n        cartProducts: cart,\n        userId\n      };\n      this.updateCartVisibility(false); // Aggiunto per nascondere l'icona del carrello\n      return this.http.post(`${this.apiUrl}/delete`, data, {\n        responseType: 'text'\n      });\n    }\n    viewCart() {\n      const userId = this.getUserId();\n      return this.http.get(`${this.apiUrl}/viewCart?userId=${userId}`);\n    }\n    getUserCart() {\n      const userId = this.getUserId();\n      return this.http.get(`${this.apiUrl}/viewCart?userId=${userId}`);\n    }\n    getUserId() {\n      let userId = localStorage.getItem('userId');\n      if (!userId) {\n        userId = this.generateUniqueId();\n        localStorage.setItem('userId', userId);\n      }\n      return userId;\n    }\n    generateUniqueId() {\n      return uuidv4();\n    }\n    calculateTotalQuantity(cartProducts) {\n      return cartProducts.reduce((total, product) => total + product.quantity, 0);\n    }\n    updateCartVisibility(isVisible) {\n      this.cartVisibilitySubject.next(isVisible);\n    }\n    static {\n      this.ɵfac = function CartService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CartService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: CartService,\n        factory: CartService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}