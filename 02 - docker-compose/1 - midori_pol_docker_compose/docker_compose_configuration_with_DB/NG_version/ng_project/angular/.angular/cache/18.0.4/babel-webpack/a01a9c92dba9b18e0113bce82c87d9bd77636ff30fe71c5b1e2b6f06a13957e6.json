{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StripeService = /*#__PURE__*/(() => {\n  class StripeService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8080/midoripol/stripe';\n    }\n    redirectToStripe(cartProducts) {\n      const userId = this.getUserId();\n      const data = {\n        cartProducts,\n        userId\n      };\n      return this.http.post(`${this.apiUrl}/confirm`, data, {\n        responseType: 'text'\n      });\n    }\n    getUserCart() {\n      const userId = this.getUserId();\n      return this.http.get(`${this.apiUrl}/viewCart?userId=${userId}`);\n    }\n    getUserId() {\n      let userId = localStorage.getItem('userId');\n      if (!userId) {\n        userId = this.generateUniqueId();\n        localStorage.setItem('userId', userId);\n      }\n      return userId;\n    }\n    generateUniqueId() {\n      return uuidv4();\n    }\n    static #_ = this.ɵfac = function StripeService_Factory(t) {\n      return new (t || StripeService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StripeService,\n      factory: StripeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return StripeService;\n})();","map":{"version":3,"names":["v4","uuidv4","StripeService","constructor","http","apiUrl","redirectToStripe","cartProducts","userId","getUserId","data","post","responseType","getUserCart","get","localStorage","getItem","generateUniqueId","setItem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Utente\\Desktop\\MIDORIBEATSORGANIZED\\angular\\src\\app\\stripe.service.ts"],"sourcesContent":["// STRIPE SERVICE\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class StripeService {\r\n  private apiUrl = 'http://localhost:8080/midoripol/stripe';\r\n  constructor (private http: HttpClient) {}\r\n\r\n  redirectToStripe(cartProducts: any[]): Observable<any> {\r\n    const userId = this.getUserId();\r\n    const data = { cartProducts, userId };\r\n    return this.http.post(`${this.apiUrl}/confirm`, data, { responseType: 'text' });\r\n  }\r\n\r\n  getUserCart(): Observable<any> {\r\n    const userId = this.getUserId();\r\n    return this.http.get<any>(`${this.apiUrl}/viewCart?userId=${userId}`);\r\n  }\r\n  private getUserId(): string {\r\n    let userId = localStorage.getItem('userId');\r\n    if (!userId) {\r\n      userId = this.generateUniqueId();\r\n      localStorage.setItem('userId', userId);\r\n    }\r\n    return userId;\r\n  }\r\n\r\n  private generateUniqueId(): string {\r\n    return uuidv4();\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;;;AAOnC,WAAaC,aAAa;EAApB,MAAOA,aAAa;IAExBC,YAAqBC,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;MADjB,KAAAC,MAAM,GAAG,wCAAwC;IACjB;IAExCC,gBAAgBA,CAACC,YAAmB;MAClC,MAAMC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;MAC/B,MAAMC,IAAI,GAAG;QAAEH,YAAY;QAAEC;MAAM,CAAE;MACrC,OAAO,IAAI,CAACJ,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,UAAU,EAAEK,IAAI,EAAE;QAAEE,YAAY,EAAE;MAAM,CAAE,CAAC;IACjF;IAEAC,WAAWA,CAAA;MACT,MAAML,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;MAC/B,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAM,GAAG,IAAI,CAACT,MAAM,oBAAoBG,MAAM,EAAE,CAAC;IACvE;IACQC,SAASA,CAAA;MACf,IAAID,MAAM,GAAGO,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC3C,IAAI,CAACR,MAAM,EAAE;QACXA,MAAM,GAAG,IAAI,CAACS,gBAAgB,EAAE;QAChCF,YAAY,CAACG,OAAO,CAAC,QAAQ,EAAEV,MAAM,CAAC;MACxC;MACA,OAAOA,MAAM;IACf;IAEQS,gBAAgBA,CAAA;MACtB,OAAOhB,MAAM,EAAE;IACjB;IAAC,QAAAkB,CAAA,G;uBAzBUjB,aAAa,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;IAAA,QAAAC,EAAA,G;aAAbtB,aAAa;MAAAuB,OAAA,EAAbvB,aAAa,CAAAwB,IAAA;MAAAC,UAAA,EAHZ;IAAM;;SAGPzB,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}