[PROGETTO]
; Nome del progetto Angular e della build WAR
nome_progetto = angularmidori
; Cartella del progetto Tomcat
tomcat_home = C:\Users\Utente\Desktop\progettiWeb\03 - utilities\docker\02 - docker-compose\1 - midori_pol_docker_compose\docker_compose_configuration_with_DB\NG_version\ng_project\apache-tomcat-9.0.86
; Porta Tomcat
tomcat_porta = 8080

; - ng build --prod --base-href /midoripolng/

; - pom.xml: <finalName>angularmidori</finalName>
; - angular.json: "build": { "builder": "@angular-devkit/build-angular:browser", "options": { "outputPath": "dist/",

[ANGULAR]
; Cartella di output della build Angular
vai nel folder di angular, poi
; Comando da eseguire per generare la build
comando_build = ng build 
; Copia dei file Angular nella cartella src/main/webapp del progetto Maven
copia-incolla tutto il contenuto di dist in webapp

[MAVEN]
; Comando per pulire e generare il WAR
comando_clean_package = mvn clean package
; Nome finale del WAR generato
war_finale = angularmidori.war
; Cartella target dove viene generato il WAR
vai nella cartella target, copia-incolla il .war in 
C:\Users\Utente\Desktop\progettiWeb\03 - utilities\docker\02 - docker-compose\1 - midori_pol_docker_compose\docker_compose_configuration_with_DB\NG_version\ng_project\apache-tomcat-9.0.86\webapps

[avvio del server]
a sx aggiungi server locale
poi add deployment, aggiungi il .war nel targetpublish full serverstart server

[ACCESSO]
; URL per accedere all'applicazione dopo il deploy
url_accesso = http://localhost:${tomcat_porta}/
